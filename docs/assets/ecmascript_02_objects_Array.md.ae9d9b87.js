import{_ as a,o as s,c as l,O as e}from"./chunks/framework.c0965656.js";const A=JSON.parse('{"title":"Array","description":"","frontmatter":{},"headers":[],"relativePath":"ecmascript/02_objects/Array.md","filePath":"ecmascript/02_objects/Array.md","lastUpdated":1686325478000}'),n={name:"ecmascript/02_objects/Array.md"},r=e(`<h1 id="array" tabindex="-1">Array <a class="header-anchor" href="#array" aria-label="Permalink to &quot;Array&quot;">​</a></h1><h2 id="构造器" tabindex="-1">构造器 <a class="header-anchor" href="#构造器" aria-label="Permalink to &quot;构造器&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Array</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="静态方法" tabindex="-1">静态方法 <a class="header-anchor" href="#静态方法" aria-label="Permalink to &quot;静态方法&quot;">​</a></h2><ul><li>isArray</li><li>from</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> set </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Set</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#A6ACCD;">(set)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//returns false</span></span>
<span class="line"><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(set)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//returns []</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="实例属性" tabindex="-1">实例属性 <a class="header-anchor" href="#实例属性" aria-label="Permalink to &quot;实例属性&quot;">​</a></h2><ul><li>length</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> []</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//returns 0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="实例方法" tabindex="-1">实例方法 <a class="header-anchor" href="#实例方法" aria-label="Permalink to &quot;实例方法&quot;">​</a></h2><h3 id="返回的不是数组" tabindex="-1">返回的不是数组 <a class="header-anchor" href="#返回的不是数组" aria-label="Permalink to &quot;返回的不是数组&quot;">​</a></h3><ul><li>at</li><li>forEach</li><li>includes</li><li>push、pop</li><li>shift、unshift</li><li>find、findLast</li><li>findIndex、findLastIndex</li><li>indexOf、lastIndexOf</li><li>some、every</li><li>reduce、reduceRight</li><li>join</li><li>entries</li></ul><h3 id="返回新数组" tabindex="-1">返回新数组 <a class="header-anchor" href="#返回新数组" aria-label="Permalink to &quot;返回新数组&quot;">​</a></h3><ul><li>splice</li><li>slice</li><li>filter</li><li>map</li><li>from</li><li>flat、flatMap</li><li>concat</li></ul><h3 id="返回原数组" tabindex="-1">返回原数组 <a class="header-anchor" href="#返回原数组" aria-label="Permalink to &quot;返回原数组&quot;">​</a></h3><ul><li>sort</li><li>reverse</li><li>copyWithin</li></ul><h2 id="案例" tabindex="-1">案例 <a class="header-anchor" href="#案例" aria-label="Permalink to &quot;案例&quot;">​</a></h2><h3 id="at" tabindex="-1">at <a class="header-anchor" href="#at" aria-label="Permalink to &quot;at&quot;">​</a></h3><h3 id="some、every" tabindex="-1">some、every <a class="header-anchor" href="#some、every" aria-label="Permalink to &quot;some、every&quot;">​</a></h3>`,19),o=[r];function t(i,p,c,d,h,y){return s(),l("div",null,o)}const m=a(n,[["render",t]]);export{A as __pageData,m as default};
