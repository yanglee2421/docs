import{_ as a,c,b as e,d as l,e as i,a as t,o as s,r as n}from"./app.84242b02.js";const j=JSON.parse('{"title":"简历","description":"","frontmatter":{},"headers":[{"level":2,"title":"个人信息","slug":"个人信息","link":"#个人信息","children":[]},{"level":2,"title":"专业技术","slug":"专业技术","link":"#专业技术","children":[]},{"level":2,"title":"工作经历","slug":"工作经历","link":"#工作经历","children":[{"level":3,"title":"武汉发网科技有限公司","slug":"武汉发网科技有限公司","link":"#武汉发网科技有限公司","children":[]}]},{"level":2,"title":"项目经验","slug":"项目经验","link":"#项目经验","children":[{"level":3,"title":"FAPD 敏捷开发平台","slug":"fapd-敏捷开发平台","link":"#fapd-敏捷开发平台","children":[]},{"level":3,"title":"LMS 劳务工系统","slug":"lms-劳务工系统","link":"#lms-劳务工系统","children":[]},{"level":3,"title":"TMS 运输流程系统","slug":"tms-运输流程系统","link":"#tms-运输流程系统","children":[]},{"level":3,"title":"CRM 客户关系系统","slug":"crm-客户关系系统","link":"#crm-客户关系系统","children":[]}]},{"level":2,"title":"教育背景","slug":"教育背景","link":"#教育背景","children":[]},{"level":2,"title":"自我评价","slug":"自我评价","link":"#自我评价","children":[]},{"level":2,"title":"踩坑记","slug":"踩坑记","link":"#踩坑记","children":[]}],"relativePath":"resume.md","lastUpdated":1678775966000}'),d={name:"resume.md"},r=t('<h1 id="简历" tabindex="-1">简历 <a class="header-anchor" href="#简历" aria-hidden="true">#</a></h1><h2 id="个人信息" tabindex="-1">个人信息 <a class="header-anchor" href="#个人信息" aria-hidden="true">#</a></h2><ul><li><a href="mailto:yanglee2421@outlook.com" target="_blank" rel="noreferrer">Email</a></li><li><a href="tel:18872082421" target="_blank" rel="noreferrer">Phone</a></li><li><a href="sms:18872082421" target="_blank" rel="noreferrer">短信</a></li></ul><h2 id="专业技术" tabindex="-1">专业技术 <a class="header-anchor" href="#专业技术" aria-hidden="true">#</a></h2><ol><li>能使用 <code>HTML5 + CSS3</code>，并结合 <code>Sass/Less</code> 等预处理器进行设计稿还原</li><li>熟练掌握 <code>JavaScript、TypeScript</code>，能使用 <code>ES6、ES7</code> 等高级语法进行高效开发</li><li>多次使用 <code>Vue 全家桶 + Element-UI</code> 进行项目开发，并对 <code>MVVM</code> 架构的设计思想有较为深入的研究</li><li>熟悉 <code>React</code>，有使用 <code>React 全家桶 + ant-design</code> 进行项目开发的经历</li><li>了解 <code>Webpack、Vite</code>，能独立搭建符合规范的脚手架，对前端工程化有一定程度的理解和实践</li><li>熟悉 <code>Git</code> 分布式下的协作开发，熟悉 Git 常用命令</li><li>参与过<code>微信小程序</code>项目，对 <code>uni-app</code> 和 <code>H5 移动端</code>有一定的实操经验</li><li>了解 <code>NodeJS</code>，曾使用 <code>NestJS</code> 进行接口开发，掌握<code>Npm</code>、<code>Yarn</code> 包管理工具</li><li>会经常封装一些公用组件、公用函数以及公用 Hook 以提高开发效率</li><li>在项目中，对于代码优化、打包优化、请求优化等优化措施有大量实践</li><li>喜欢思考问题，并进行知识输出，撰写的技术文章已收获 <code>1500+</code> 阅读</li></ol><h2 id="工作经历" tabindex="-1">工作经历 <a class="header-anchor" href="#工作经历" aria-hidden="true">#</a></h2>',6),p={id:"武汉发网科技有限公司",tabindex:"-1"},h=e("a",{class:"header-anchor",href:"#武汉发网科技有限公司","aria-hidden":"true"},"#",-1),u=e("p",{style:{"text-indent":"2em"}}," 负责公司前端项目的开发和维护。在职期间成功解决 CRM 和 PMS 中累计 20 多个页面在交互上长期存在的各种痛点、大幅提高页面整体美观度、优化老旧代码的可维护性和规范性。参与各类前端项目迭代累计 20 多次，并根据业务需要不断学习 React、TypeScript、微信小程序、uni-app 等各类前端技术，持续总结项目经验，将复现率高的代码封装为简单易用的公共组件，并在项目中推进 TypeScript，建立统一的代码风格，月绩效多次达到 90 以上。 ",-1),_=e("h2",{id:"项目经验",tabindex:"-1"},[l("项目经验 "),e("a",{class:"header-anchor",href:"#项目经验","aria-hidden":"true"},"#")],-1),m={id:"fapd-敏捷开发平台",tabindex:"-1"},f=e("a",{class:"header-anchor",href:"#fapd-敏捷开发平台","aria-hidden":"true"},"#",-1),y=t('<p style="text-indent:2em;"> 服务于软件开发人员的 ERP 系统，类似腾讯 TAPD，旨在解决敏捷开发流程中业务不规范、沟通交流复杂的问题，为开发流程中的项目排期、产品需求规范化，Bug 点收集整理提供专业的解决方案 </p><ul><li>技术栈：vue3 全家桶、Element-Plus、TypeScript、Sass</li><li>要点： <blockquote><ol><li>编写登录模块，支持自动注销、组件鉴权、登录状态持久化等功能</li><li>编写 axios 实例，支持加载动画、取消请求、请求超时、错误信息拦载等</li><li>根据业务需求封装了树组件，支持添加，搜索，编辑等</li><li>封装了下拉组件，支持分页、远程搜索、字段回显</li><li>封装了 useDark 钩子，用以实现暗夜模式跟随浏览器主题</li><li>封装了 useResize 钩子，解决了 dom 没有 resize 事件的问题</li><li>改进生成柱形图、折线图、饼图等 echarts 图的公用函数，实现图表尺寸的自适应</li><li>模拟 bootstrap 编写全局 Scss 工具类和混合器</li></ol></blockquote></li></ul>',2),b={id:"lms-劳务工系统",tabindex:"-1"},S=e("a",{class:"header-anchor",href:"#lms-劳务工系统","aria-hidden":"true"},"#",-1),g=t('<p style="text-indent:2em;"> 主要面向有大批量人员管理需求的企业管理者，着重解决大型公司中人员数量庞大、部门交错繁多、组织结构复杂的问题，目前该系统中有近5万+的人员数据，已有多家企业采用该系统进行人员管理 </p><ul><li>技术栈：Vue3 全家桶、Element-Plus、TypeScript、Sass</li><li>要点： <blockquote><ol><li>处理了上传图片的逻辑，支持图片裁切、图片转 base64</li><li>处理大文件分片上传的逻辑，解决 100M 以上文件不能上传的问题</li><li>处理了将页面数据导出为 excel 的逻辑</li><li>由于旧版组件库缺功能，手写了 el-switch 组件</li><li>封装了消息轮播组件，支持滚动播放、自动播放</li><li>封装了 input 组件，解决 Firefox 中 input 并不限制输入字符的问题</li><li>封装了 image 组件，针对图片加载失败的情况显示替代内容</li><li>为旧代码编写类型声明，解决项目在从 JavaScript 转向 TypeScript 的过程中，部分代码缺少类型声明的问题</li></ol></blockquote></li></ul>',2),C={id:"tms-运输流程系统",tabindex:"-1"},T=e("a",{class:"header-anchor",href:"#tms-运输流程系统","aria-hidden":"true"},"#",-1),v=t('<p style="text-indent:2em;"> 服务于供应链型企业，着重解决因客户需求不统一，产品类目繁多，运输线路复杂等引发的运输事故，为产品运输过程中的发车线路规划，流程节点管理，运输人员部署等需求提供解决方案 </p><ul><li>技术栈：Vue3 全家桶、Element-Plus、TypeScript、Sass</li><li>要点： <blockquote><ol><li>处理了网页埋点的逻辑，能够收集用户事件、页面曝光时间、跳转情况</li><li>处理复杂动态表单的校验，统一对失败的情况给出提示</li><li>编写了防抖节流工具类，规避多次发起网络请求拖慢服务器的问题</li><li>封装 v-drag 指令，实现动态表单项拖拽排序功能</li><li>封装用于日期格式化的公用函数</li><li>封装 v-collapse 指令，实现自定义折叠动画</li></ol></blockquote></li></ul>',2),k={id:"crm-客户关系系统",tabindex:"-1"},F=e("a",{class:"header-anchor",href:"#crm-客户关系系统","aria-hidden":"true"},"#",-1),x=t('<p style="text-indent:2em;"> 面向客户、销售人员以及销售管理者的数据交互平台，方便管理者及时 了解产品的销售进度和维护销售和客户间的对应关系，为客户提供产品介绍、 合同速览等功能，为销售人员提供数据收集整理功能 </p><ul><li>技术栈：Vue2、Element-UI、Vuex、Sass</li><li>要点： <blockquote><ol><li>封装滚动条组件，解决 Chrome 和 Firefox 中滚动条样式不统一的问题</li><li>在 Vue2 中还原 teleport 组件，实现多级菜单</li><li>在 MVC 架构下实现页面跳转时的相互传参</li><li>封装表单、表格、分页、弹出框等组件简化开发流程</li><li>调整旧有页面实现自适应布局，解决长期以来网页排版混乱的问题</li></ol></blockquote></li></ul><h2 id="教育背景" tabindex="-1">教育背景 <a class="header-anchor" href="#教育背景" aria-hidden="true">#</a></h2>',3),A=e("li",null,"专业：计算机科学与技术",-1),D=e("li",null,"主修课程：计算机网络、数据库系统原理、数据结构、操作系统等",-1),V=e("li",null,"曾获荣誉：校奖学金",-1),E=t(`<h2 id="自我评价" tabindex="-1">自我评价 <a class="header-anchor" href="#自我评价" aria-hidden="true">#</a></h2><p>吃苦耐劳💦，接受加班👌。</p><h2 id="踩坑记" tabindex="-1">踩坑记 <a class="header-anchor" href="#踩坑记" aria-hidden="true">#</a></h2><ul><li>在<code>try</code>中<code>return Promise.reject()</code>不会触发<code>catch</code>，<code>await Promise.reject()</code>会</li><li><code>createHashRouter</code>的<code>basename</code>会被拼到 hash 而不是 path 中</li><li><code>try...catch...finally</code>中<code>finally</code>的<code>return</code>会覆盖前两者的<code>return</code>或<code>throw</code>，即使前两者执行了<code>return</code>或<code>throw</code>，<code>finally</code>块也会执行</li><li>函数内部若依赖于一些外部变量，那么函数提升可能会带来一些问题</li><li>原始类型是没有属性和方法的，但大部分原始值仍然表现得像有一样。当在原始值上访问属性时，JavaScript 自动将值装入包装器对象中，并访问该对象上的属性。例如，&quot;foo&quot;.includes(&quot;f&quot;) 隐式创建了一个 String 包装对象，并在该对象上调用 String.prototype.includes()。</li><li><code>Boolean</code>、<code>Number</code>、<code>BigInt</code>、<code>String</code>、<code>Symbol</code>被<code>new</code>调用时，返回一个与原始值对应的包装对象而非原始值本身</li><li>隐式类型转换依赖于原始值包装对象</li><li>包装对象浅等于对应的原始值</li><li>不存在用来包装<code>undefined</code>和<code>null</code>的对象，故从它们身上访问属性或方法时，会抛出<code>TypeError</code></li><li>github pages 默认使用 jekyll 进行部署，jekyll 会忽略<code>_</code>开头的文件，需要添加<code>_config.yml</code>文件指定要包含的文件</li><li><code>_config.yml</code>要放到 github pages 的部署目录下</li><li>也可以在部署目录下生成一个<code>.nojekyll</code>文件，以关闭 jeklly 部署</li><li>CssModule 会编译伪类中的类名、<code>:global</code>指令里的类名不会被编译</li><li><code>touchmove</code>事件在移动端（IOS 上没有）有一个默认行为，input 的内容可以被滑动，可以使用<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/pointer-events" target="_blank" rel="noreferrer">pointer-events</a>、<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/touch-action" target="_blank" rel="noreferrer">touch-action</a>禁用它</li><li>form 标签可以用<code>FormData</code>类和<code>formdata</code>事件收集其中的数据</li><li><code>input[type=reset]</code>可以将 form 中的 input 的 value 还原为其 value 属性上写定的值</li><li>每当组件函数执行时，调用的 hook 数必须一致</li><li>border-box 的使用场合：需要给子元素设置 padding、border 或百分比的宽高</li><li>JS 可以使用<code>getComputedStyle()</code>访问到 CSS 为元素设置的样式</li><li>vue 中：只有 dom 更新才会触发 update 钩子，更新的 dom 属于哪个组件，哪个组件的 update 钩子就触发</li><li>除了已开启定位的元素外，<code>z-index</code>也对 flex-item 生效</li><li>fixed 定位并不总是相对于视口，当元素祖先的 transform、perspective、filter 或 backdrop-filter 属性非 none 时，容器由视口改为该祖先。</li><li>不能从 React.MouseEvent 上直接访问 offsetX/offsetY、需通过 e.nativeEvent 先访问原生事件</li><li>MouseEvent：client 系相对于视口、offset 系相对于盒元素、screen 系相对于屏幕、page 系相对于网页</li><li>函数访问变量时，先找自身作用域、自身作用域没的找闭包、闭包也没有的找外层作用域</li><li>JSON 的两个方法仅适用于可序列化的数据，更合理的深克隆方案是<a href="https://developer.mozilla.org/zh-CN/docs/web/api/structuredClone" target="_blank" rel="noreferrer">structuredClone</a></li><li>antd：Table 不能没有 rowkey</li><li>vue3：watch、watchEffect 提供了用于清除 effect 的 API</li><li>vue3：watch 执行栈：clearFn(sync)--&gt;watcher(sync)--&gt;clearFn(pre)--&gt;watcher(pre)--&gt;beforeUpdate--&gt;clearFn(post)--&gt;watcher(post)--&gt;updated--&gt;nextTick</li><li>antd：Modal 里套 Form 时，需要指定 forceRender</li><li>antd：Form.Item 会接管内部 Input 的 value，需要以 form.setFieldValue 改值</li><li>http：browser 端的 get 不支持 body，server 端则普遍支持（node 上的 fetch 除外）</li><li>browser：dom 的 id 可以当变量在控制台输出 dom（默认行为）</li><li>structuredClone 不能处理 proxy 实例</li><li>不能用<code>let</code>、<code>const</code>重新声明已被<code>var</code>声明过变量，<code>let</code>、<code>const</code>会销毁块作用域内已存在的同名变量</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (a) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">a</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//Cannot access &#39;a&#39; before initialization</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">a</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>yarn3 安装的依赖由于是压缩的无法直接被 typescript 识别</li><li><code>==</code>运算符将对象转化为基本类型时，会调用<code>@toPrimitive</code>、<code>valueOf</code>、<code>toString</code></li><li>需自动生成多个<code>then</code>时，可以使用<code>reduce</code></li><li>React 中<code>props.children</code>的<code>props</code>不能值接修改，但可以使用<code>React.cloneElement</code>的二参复制一个具有不同<code>props</code>的元素</li><li>微信开发者工具测试蓝牙情况时，相比正式版小程序会有更大的响应延迟</li><li><code>new URL</code>第二个参数<code>/</code>及后的部分会被舍弃</li><li>不能在 render 执行时，读写 ref.current</li><li><code>white-space:pre-line</code>类似<code>pre</code>标签</li><li><code>Error</code>的<code>constructor</code>可以输入第二个参数</li></ul>`,6);function P(R,I,N,w,M,q){const o=n("Badge");return s(),c("div",null,[r,e("h3",p,[l("武汉发网科技有限公司 "),i(o,{text:"2022.03-2022.11"}),l(),h]),u,_,e("h3",m,[l("FAPD 敏捷开发平台 "),i(o,{text:"2022.09-2022.11"}),l(),f]),y,e("h3",b,[l("LMS 劳务工系统 "),i(o,{text:"2022.07-2022.08"}),l(),S]),g,e("h3",C,[l("TMS 运输流程系统 "),i(o,{text:"2022.05-2022.06"}),l(),T]),v,e("h3",k,[l("CRM 客户关系系统 "),i(o,{text:"2022.03-2022.04"}),l(),F]),x,e("ul",null,[e("li",null,[l("院校：武昌工院 "),i(o,{text:"2018-2022"})]),A,D,V]),E])}const B=a(d,[["render",P]]);export{j as __pageData,B as default};
