import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.395e6a84.js";const h=JSON.parse('{"title":"Number","description":"","frontmatter":{},"headers":[],"relativePath":"ecmascript/01_primitive/04_Number.md","filePath":"ecmascript/01_primitive/04_Number.md","lastUpdated":1686325478000}'),o={name:"ecmascript/01_primitive/04_Number.md"},e=l(`<h1 id="number" tabindex="-1">Number <a class="header-anchor" href="#number" aria-label="Permalink to &quot;Number&quot;">​</a></h1><h2 id="进制" tabindex="-1">进制 <a class="header-anchor" href="#进制" aria-label="Permalink to &quot;进制&quot;">​</a></h2><ul><li>十进制整数字面量由一串数字序列组成，且没有前缀 0。</li><li>八进制的整数以 0（或 0O、0o）开头，只能包括数字 0-7。</li><li>十六进制整数以 0x（或 0X）开头，可以包含数字（0-9）和字母 a~f 或 A~F。</li><li>二进制整数以 0b（或 0B）开头，只能包含数字 0 和 1。</li></ul><h2 id="静态方法" tabindex="-1">静态方法 <a class="header-anchor" href="#静态方法" aria-label="Permalink to &quot;静态方法&quot;">​</a></h2><ul><li><a href="#isnan">isNaN</a></li></ul><h2 id="实例方法" tabindex="-1">实例方法 <a class="header-anchor" href="#实例方法" aria-label="Permalink to &quot;实例方法&quot;">​</a></h2><ol><li><a href="#tofixed">toFixed</a></li><li><a href="#tostring">toString</a></li></ol><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><h3 id="isnan" tabindex="-1">isNaN <a class="header-anchor" href="#isnan" aria-label="Permalink to &quot;isNaN&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">globalThis.</span><span style="color:#B392F0;">isNaN</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;NaN&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">//true</span></span>
<span class="line"><span style="color:#E1E4E8;">Number.</span><span style="color:#B392F0;">isNaN</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;NaN&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">//false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">globalThis.</span><span style="color:#6F42C1;">isNaN</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;NaN&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">//true</span></span>
<span class="line"><span style="color:#24292E;">Number.</span><span style="color:#6F42C1;">isNaN</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;NaN&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">//false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>与 globalThis.isNaN 不同，Number.isNaN 不会进行类型转换</p></div><h3 id="tofixed" tabindex="-1">toFixed <a class="header-anchor" href="#tofixed" aria-label="Permalink to &quot;toFixed&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">num</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> num.</span><span style="color:#B392F0;">toFixed</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">//10.00</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">num</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> num.</span><span style="color:#6F42C1;">toFixed</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">//10.00</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>返回的是 string</p></div><h3 id="tostring" tabindex="-1">toString <a class="header-anchor" href="#tostring" aria-label="Permalink to &quot;toString&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">num</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> num.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">//10</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">num</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> num.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">//10</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><ul><li>用于进行进制转换</li><li>返回是 string</li></ul></div>`,17),p=[e];function t(r,c,i,y,d,E){return a(),n("div",null,p)}const b=s(o,[["render",t]]);export{h as __pageData,b as default};
