import{_ as t,c as e,o as s,a as n}from"./app.a780e610.js";const F=JSON.parse('{"title":"数据类型","description":"","frontmatter":{},"headers":[{"level":2,"title":"基本类型","slug":"基本类型","link":"#基本类型","children":[]},{"level":2,"title":"引用类型","slug":"引用类型","link":"#引用类型","children":[]},{"level":2,"title":"声明","slug":"声明","link":"#声明","children":[]}],"relativePath":"ECMAScript/01_语法/数据类型.md"}'),l={name:"ECMAScript/01_语法/数据类型.md"},a=n(`<h1 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-hidden="true">#</a></h1><h2 id="基本类型" tabindex="-1">基本类型 <a class="header-anchor" href="#基本类型" aria-hidden="true">#</a></h2><ol><li><code>undefined</code></li><li><code>Number</code></li><li><code>String</code></li><li><code>Boolean</code></li><li><code>Symbol</code></li><li><code>BigInt</code></li><li><code>null</code></li></ol><h2 id="引用类型" tabindex="-1">引用类型 <a class="header-anchor" href="#引用类型" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Object</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Function</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Array</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">RegExp</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Error</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Set</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Map</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="声明" tabindex="-1">声明 <a class="header-anchor" href="#声明" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:center;">关键字</th><th style="text-align:center;">变量提升</th><th style="text-align:center;">块级作用域</th><th style="text-align:center;">重复声明</th><th style="text-align:center;">可以改</th></tr></thead><tbody><tr><td style="text-align:center;"><code>var</code></td><td style="text-align:center;">全局的顶部</td><td style="text-align:center;">无</td><td style="text-align:center;">允许</td><td style="text-align:center;">可以</td></tr><tr><td style="text-align:center;"><code>function</code></td><td style="text-align:center;">块的顶部</td><td style="text-align:center;">无</td><td style="text-align:center;">允许</td><td style="text-align:center;">可以</td></tr><tr><td style="text-align:center;"><code>let</code></td><td style="text-align:center;">没有</td><td style="text-align:center;">有</td><td style="text-align:center;">不允许</td><td style="text-align:center;">可以</td></tr><tr><td style="text-align:center;"><code>const</code></td><td style="text-align:center;">没有</td><td style="text-align:center;">有</td><td style="text-align:center;">不允许</td><td style="text-align:center;">不可以</td></tr></tbody></table>`,7),o=[a];function c(r,p,d,i,y,A){return s(),e("div",null,o)}const h=t(l,[["render",c]]);export{F as __pageData,h as default};
